<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TemperatureIconMeterWPF"
        xmlns:tb="http://www.hardcodet.net/taskbar" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="TemperatureIconMeterWPF.MainWindow"
        mc:Ignorable="d"
        xmlns:properties="clr-namespace:TemperatureIconMeterWPF.Properties"
        Title="Temperature Icon Meter" Height="440" Width="400" MinHeight="400" MinWidth="360" WindowStartupLocation="CenterScreen" Icon="icon.ico" Closing="Window_Closing" SizeToContent="Height">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:DrawingColorToWindowsMediaColor x:Key="DrawingColorToWindowsMediaColor"/>
        <ContextMenu x:Key="SharedContextMenu" x:Shared="true">
            <MenuItem x:Name="MenuItemSettings" Header="{x:Static properties:Resources.Settings}" Click="MenuItemSettings_Click">
                <MenuItem.Icon>
                    <Image Source="images\cog.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="MenuItemResetMinMaxReadings" Header="{x:Static properties:Resources.ResetMinMaxReadings}" Command="{Binding ResetMinMaxReadings, Mode=OneWay}">
                <MenuItem.Icon>
                    <Image Source="images\arrow_rotate_clockwise.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="MenuItemAbout" Header="{x:Static properties:Resources.AboutApplication}" Click="MenuItemAbout_Click">
                <MenuItem.Icon>
                    <Image Source="images\information.png"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator />

            <MenuItem x:Name="MenuItemClose" Header="{x:Static properties:Resources.CloseApplication}" Click="MenuItemClose_Click">
                <MenuItem.Icon>
                    <Image Source="images\cross.png"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

    </Window.Resources>
    <DockPanel>

        <DockPanel LastChildFill="False" VerticalAlignment="Top" DockPanel.Dock="Top">
            <Label VerticalAlignment="Bottom" Margin="5,0,0,0">
                <TextBlock>
                    <Run Text="{x:Static properties:Resources.TemperatureSensors}"/><Run Text=":"/>
                </TextBlock>
            </Label>
            <Button DockPanel.Dock="Right" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Padding="4,1" 
                    Content="{x:Static properties:Resources.RescanSystem}"
                    Command="{Binding RescanSystem, Mode=OneWay}" 
                    />
        </DockPanel>

        <Grid DockPanel.Dock="Bottom" HorizontalAlignment="Right"  Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="ButtonOK" Grid.Column="0" Margin="4" VerticalAlignment="Center"  MinHeight="24" 
                    Content="{x:Static properties:Resources.OK}" 
                    Command="{Binding SaveAndReset, Mode=OneWay}" 
                    Click="ButtonOK_Click"/>
            <Button x:Name="ButtonCancel" Grid.Column="1" VerticalAlignment="Center"  MinHeight="24" MinWidth="75" Margin="4" 
                    Content="{x:Static properties:Resources.Cancel}" 
                    Command="{Binding CancelSettingsUpdate, Mode=OneWay}" 
                    Click="ButtonCancel_Click"/>
            <tb:TaskbarIcon x:Name="MainTaskbarIcon" 
                            ContextMenu="{DynamicResource SharedContextMenu}" 
                            IconSource="icon.ico" 
                            ToolTipText="{Binding TemperatureMeter.Tooltip, Mode=OneWay}">
                <tb:TaskbarIcon.TrayPopup>
                    <local:PopupWindow/>
                </tb:TaskbarIcon.TrayPopup>
            </tb:TaskbarIcon>
        </Grid>

        <Grid DockPanel.Dock="Bottom" Margin="8,0">
            <Grid.Resources>
                <Style x:Key="lineStyle" TargetType="{x:Type Line}">
                    <Setter Property="Stroke" Value="Gray" />
                    <Setter Property="Stretch" Value="Fill" />
                    <Setter Property="Panel.ZIndex" Value="100" />
                    <!-- <Setter Property="StrokeDashArray" Value="1,2" /> -->
                </Style>
                <Style x:Key="horizontalLineStyle" TargetType="{x:Type Line}" BasedOn="{StaticResource lineStyle}">
                    <Setter Property="X2" Value="1" />
                    <Setter Property="VerticalAlignment" Value="Bottom" />
                    <Setter Property="Grid.ColumnSpan" 
                    Value="{Binding ColumnDefinitions.Count, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>
                </Style>
                <Style x:Key="verticalLineStyle" TargetType="{x:Type Line}" BasedOn="{StaticResource lineStyle}">
                    <Setter Property="Y2" Value="1" />
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter Property="Grid.RowSpan"   
                    Value="{Binding RowDefinitions.Count, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label x:Name="LabelSafeTemperature" VerticalAlignment="Center" Grid.Row="1">
                <TextBlock>
                    <Run Text="{x:Static properties:Resources.SafeTemperature}"/><!--
                 --><Run Text=": ≤ "/><!--
                 --><Run Text="{Binding Path=WarningThreshold}"/><!--
                 --><Run Text="°C"/>
                </TextBlock>
            </Label>

            <Label x:Name="LabelWarmingTemperature" Grid.Row="2" VerticalAlignment="Center">
                <TextBlock>
                    <Run Text="{x:Static properties:Resources.WarningTemperature}"/><!--
                 --><Run Text=": "/><!--
                 --><Run Text="{Binding Path=WarningThreshold}"/><!--
                 --><Run Text=" - "/><!--
                 --><Run Text="{Binding Path=DangerThreshold}"/><!--
                 --><Run Text="°C"/>
                </TextBlock>
            </Label>
            <Label x:Name="LabelDangerTemperature" Grid.Row="3" VerticalAlignment="Center">
                <TextBlock>
                    <Run Text="{x:Static properties:Resources.DangerTemperature}"/><!--
                 --><Run Text=": ≥ "/><!--
                 --><Run Text="{Binding Path=DangerThreshold}"/><!--
                 --><Run Text="°C"/>
                </TextBlock>            
            </Label>
            <Slider Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" MinWidth="80" Margin="0,0,8,0" Maximum="{Binding MaxTemperature, Mode=OneWay}" Minimum="{Binding MinTemperature, Mode=OneWay}" Value="{Binding WarningThreshold}"/>
            <Slider Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" MinWidth="80" Margin="0,0,8,0" Maximum="{Binding MaxTemperature, Mode=OneWay}" Minimum="{Binding MinTemperature, Mode=OneWay}" Value="{Binding DangerThreshold}"/>
            <xctk:ColorPicker Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" MinWidth="80"
                SelectedColor="{
                    Binding Path=Settings.SafeColor, 
                    Converter={StaticResource DrawingColorToWindowsMediaColor}
                }" 
            />
            <xctk:ColorPicker Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" MinWidth="80" Margin="0,0,0,0"
                SelectedColor="{
                    Binding Path=Settings.WarningColor, 
                    Converter={StaticResource DrawingColorToWindowsMediaColor}
                }" 
            />
            <xctk:ColorPicker Grid.Column="2" Grid.Row="3" VerticalAlignment="Center" MinWidth="80" Margin="0,0,0,0"
                SelectedColor="{
                    Binding Path=Settings.DangerColor, 
                    Converter={StaticResource DrawingColorToWindowsMediaColor}
                }" 
            />
            
            <CheckBox Grid.Row="4" VerticalAlignment="Center" Grid.ColumnSpan="3"  Margin="0,4"
                      Content="{x:Static properties:Resources.UseVerticalBars}"
                      IsChecked="{Binding Settings.UseVerticalBars}"/>
            <CheckBox Grid.Row="5" VerticalAlignment="Center" Grid.ColumnSpan="3" Margin="0,4"
                      Content="{x:Static properties:Resources.RunatStartup}"
                      IsChecked="{Binding Settings.RunAtStartup}" />

            <Line Grid.Row="6" Style="{StaticResource horizontalLineStyle}" VerticalAlignment="Center" Margin="0,4"/>
            
            <Label Grid.Column="0" Grid.Row="7" VerticalContentAlignment="Center" Margin="0,0,0,4"
               Content="{x:Static properties:Resources.Language}"/>
            <ComboBox Name="cmbLanguage" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2"
                  SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=Language}"
                  SelectedValuePath="Key"
                  DisplayMemberPath="Value" Margin="4,2"
                  />

            <Line Grid.Row="8" Style="{StaticResource horizontalLineStyle}" VerticalAlignment="Center" Margin="0,4"/>

        </Grid>
        <TreeView x:Name="TreeViewMain" ItemsSource="{Binding TemperatureMeter.HardwareTreeNodes}" Margin="5,0">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:HardwareTreeNode}" ItemsSource="{Binding Sensors}">
                    <TextBlock Text="{Binding Name}" />
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type local:SensorTreeNode}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsSelected}"/>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat=" {0} [{1}°C ▲{2} ▼{3}]">
                                    <Binding Path="Name" />
                                    <Binding Path="Value" />
                                    <Binding Path="Max" />
                                    <Binding Path="Min" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Margin="5,0,0,0">
                            <Hyperlink Click="SensorTreeNodeHyperlink_Click">
                                <Run Text="{x:Static properties:Resources.DisplayName}"/><!--
                             --><Run Text=": "/><!--
                             --><Run Text="{Binding Path=DisplayName}" />
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True" />
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

    </DockPanel>

</Window>
